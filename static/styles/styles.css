* {
  box-sizing: border-box;
}

body {
  margin: 0;
  background-image: url( photoToRender/CometWebBackground.jpg );
  font-family: Arial, Helvetica, sans-serif;
}

@mixin glitchCopy { 
		content: attr(data-text);
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
}

.glitch {
	position: relative;
	color: white;
	font-size: 4em;
	letter-spacing: .5em;
	/* Animation provies a slight random skew. Check bottom of doc
	for more information on how to random skew. */
	animation: glitch-skew 1s infinite linear alternate-reverse;
	
	// Creates a copy before our text. 
	&::before{
		// Duplicates our text with the mixin.
		@include glitchCopy;
		// Scoots text slightly to the left for the color offset.
		left: 2px;
		// Creates the color 'shadow' that happens on the glitch.
		text-shadow: -2px 0 #ff00c1;
		/* Creates an initial clip for our glitch. This works in
		a typical top,right,bottom,left fashion and creates a mask
		to only show a certain part of the glitch at a time. */
		clip: rect(44px, 450px, 56px, 0);
		/* Runs our glitch-anim defined below to run in a 5s loop, infinitely,
		with an alternating animation to keep things fresh. */
		animation: glitch-anim 5s infinite linear alternate-reverse;
	}
	
	// Creates a copy after our text. Note comments from ::before.
	&::after {
		@include glitchCopy;
		left: -2px;
		text-shadow: -2px 0 #00fff9, 2px 2px #ff00c1;
		animation: glitch-anim2 1s infinite linear alternate-reverse;
	}
}

/* Creates an animation with 20 steaps. For each step, it calculates 
a percentage for the specific step. It then generates a random clip
box to be used for the random glitch effect. Also adds a very subtle
skew to change the 'thickness' of the glitch.*/
@keyframes glitch-anim {
  $steps: 20;
  @for $i from 0 through $steps {
    #{percentage($i*(1/$steps))} {
      clip: rect(random(100)+px, 9999px, random(100)+px, 0);
			transform: skew((random(100) / 100) + deg);
    }
  }
}

// Same deal, just duplicated for ultra randomness.
@keyframes glitch-anim2 {
  $steps: 20;
  @for $i from 0 through $steps {
    #{percentage($i*(1/$steps))} {
      clip: rect(random(100)+px, 9999px, random(100)+px, 0);
			transform: skew((random(100) / 100) + deg);
    }
  }
}

// Does the same deal as before, but now only skews. Used for main text.
@keyframes glitch-skew {
  $steps: 10;
  @for $i from 0 through $steps {
    #{percentage($i*(1/$steps))} {
      transform: skew((random(10) - 5) + deg);
    }
  }
}

#niceHeader{
  font-family: verdana;
  font-weight: bold;
  text-decoration: underline;
  text-decoration-style: wavy;
  text-transform: capitalize;
  font-variant: small-caps;
  text-align: center;
  font-size: 65px;
  letter-spacing: -3px;
  word-spacing: 6px;
  color: rgba(0, 247, 255, 0.65);
  background-color: rgba(84, 84, 0, 0);
  text-shadow: rgba(251, 138, 255, 0.56) 7px 0px 3px;
}

@keyframes tracking-in-contract {
  0% {
    letter-spacing: 1em;
    opacity: 0;
  }
  40% {
    opacity: 0.6;
  }
  100% {
    letter-spacing: normal;
    opacity: 1;
  }
}

/* Style the side navigation */
.sidenav {
  height: 100%;
  width: 150px;
  position: fixed;
  z-index: 1;
  top: 0;
  left: 0;
  background-image: linear-gradient(to right, rgba(52,34,138,1), rgba(35,22,99,0));
  overflow-x: hidden;
}

@keyframes vibrate-1 {
  0% {
    -webkit-transform: translate(0);
            transform: translate(0);
  }
  20% {
    -webkit-transform: translate(-2px, 2px);
            transform: translate(-2px, 2px);
  }
  40% {
    -webkit-transform: translate(-2px, -2px);
            transform: translate(-2px, -2px);
  }
  60% {
    -webkit-transform: translate(2px, 2px);
            transform: translate(2px, 2px);
  }
  80% {
    -webkit-transform: translate(2px, -2px);
            transform: translate(2px, -2px);
  }
  100% {
    -webkit-transform: translate(0);
            transform: translate(0);
  }
}

.homeButton{
  position: absolute;
  bottom: 8px;
  right: 16px;
  width: 48px;
  height: 50px;
  background-color: rgba(34, 9, 189,0.5)
}

/* Darker background on mouse-over */
.homeButton:hover {
  animation-name: vibrate-1;
  animation-duration: 0.4s;
}

/* Side navigation links */
.sidenav a {
  color: white;
  padding: 16px;
  text-decoration: none;
  display: block;
}

@keyframes pulsate-fwd {
  0% {
    -webkit-transform: scale(1);
      transform: scale(1);
  }
  50% {
    -webkit-transform: scale(1.1);
      transform: scale(1.1);
  }
  100% {
    -webkit-transform: scale(1);
      transform: scale(1);
  }
}

/* Change color on hover */
.sidenav a:hover {
  background-image: linear-gradient(to right, rgba(106, 90, 205,1), rgba(106, 90, 205, 0));
  color: white;
  opacity: 0.8;
  animation-name: pulsate-fwd;
  animation-duration: 0.4s;
}

/* Style the content */
.content {
  color: white;
  margin-left: 150px;
  padding-left: 20px;
  animation-name: tracking-in-contract;
  animation-duration: 1.5s;
}

.homeButton {border-radius: 10%;}